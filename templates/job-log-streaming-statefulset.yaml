apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "integration-manager.job-log-streaming.shortname" . }}
  labels:
    app: integration-manager
    component: job-log-streaming
    chart: {{ template "integration-manager.chart" . }}
    release: {{ .Release.Name }}
spec:
  serviceName: {{ template "integration-manager.job-log-streaming.shortname" . }}
  replicas: {{ .Values.jobLogStreaming.replicaCount }}
  revisionHistoryLimit: {{ .Values.jobLogStreaming.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: integration-manager
      component: job-log-streaming
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/sharedconfig: {{ include (print $.Template.BasePath "/shared-configmap.yaml") . | sha256sum }}
        checksum/joblogstreamingconfig: {{ include (print $.Template.BasePath "/job-log-streaming-configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.jobLogStreaming.podAnnotations }}
        {{ .Values.jobLogStreaming.podAnnotations | toYaml | indent 8 | trim }}
        {{- end }}
      labels:
        app: integration-manager
        component: job-log-streaming
        chart: {{ template "integration-manager.chart" . }}
        release: {{ .Release.Name }}
        {{- if .Values.jobLogStreaming.extraLabels }}
        {{ .Values.jobLogStreaming.extraLabels | toYaml | indent 8 | trim }}
        {{- end }}
    spec:
      {{- if .Values.jobLogStreaming.affinity }}
      affinity:
        {{ .Values.jobLogStreaming.affinity | toYaml | indent 8 | trim }}
      {{- end }}
      serviceAccountName: {{ template "integration-manager.fullname" . }}
      {{- if .Values.jobLogStreaming.nodeSelector }}
      nodeSelector:
        {{ .Values.jobLogStreaming.nodeSelector | toYaml | indent 8 | trim  }}
      {{- end }}
      {{- if .Values.jobLogStreaming.extraInitContainers }}
      initContainers:
        {{ tpl .Values.jobLogStreaming.extraInitContainers . | indent 8 | trim }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.jobLogStreaming.podSecurityContext | nindent 8 }}
      containers:
        - name: job-log-streaming
          image: {{ .Values.jobLogStreaming.image }}
          imagePullPolicy: {{ .Values.jobLogStreaming.pullPolicy }}
          {{- if .Values.jobLogStreaming.securityContext }}
          securityContext:
            {{- toYaml .Values.jobLogStreaming.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.repository.awsCreateEnvVar }}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: aws-access-key
              {{- if .Values.existingSecret }}
                  name: {{ .Values.existingSecret }}
              {{- else }}
                  name: {{ template "integration-manager.fullname" . }}
              {{- end }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: aws-secret-key
              {{- if .Values.existingSecret }}
                  name: {{ .Values.existingSecret }}
              {{- else }}
                  name: {{ template "integration-manager.fullname" . }}
              {{- end }}
          {{- end }}
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: im-shared-volume
              readOnly: true
              mountPath: /etc/config/shared.properties
              subPath: application.properties
            - name: job-log-streaming-volume
              readOnly: true
              mountPath: /etc/config/application.properties
              subPath: application.properties
            - name: secret-volume
              readOnly: true
              mountPath: /etc/secrets
            {{- if .Values.existingRabbitSecret }}
            - name: amqp-secret-volume
              readOnly: true
              mountPath: /etc/secrets/amqp
            {{- end }}
            - name: kafka-rocksdb-storage
              mountPath: /tmp/kafka-streams
          {{- if .Values.jobLogStreaming.readinessProbe }}
          readinessProbe:
            {{ .Values.jobLogStreaming.readinessProbe | toYaml | indent 12 | trim }}
          {{- end }}
          {{- if .Values.jobLogStreaming.livenessProbe }}
          livenessProbe:
            {{ .Values.jobLogStreaming.livenessProbe | toYaml | indent 12 | trim }}
          {{- end }}
          {{- if .Values.jobLogStreaming.resources }}
          resources:
            {{ .Values.jobLogStreaming.resources | toYaml | indent 12 | trim }}
          {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      volumes:
        - name: kafka-rocksdb-storage
          persistentVolumeClaim:
            claimName: kafka-rocksdb-storage-pvc
        - name: im-shared-volume
          configMap:
            name: {{ template "integration-manager.fullname" . }}-shared
        - name: job-log-streaming-volume
          configMap:
            name: {{ template "integration-manager.job-log-streaming.fullname" . }}
        - name: secret-volume
          secret:
          {{- if .Values.existingSecret }}
            secretName: {{ .Values.existingSecret }}
          {{- else }}
            secretName: {{ template "integration-manager.fullname" . }}
          {{- end }}
        {{- if .Values.existingRabbitSecret }}
        - name: amqp-secret-volume
          secret:
            secretName: {{ .Values.existingRabbitSecret }}
            items:
              - key: rabbitmq-host
                path: rabbitmq-host
              - key: rabbitmq-username
                path: rabbitmq-username
              - key: rabbitmq-password
                path: rabbitmq-password
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: kafka-rocksdb-storage-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi