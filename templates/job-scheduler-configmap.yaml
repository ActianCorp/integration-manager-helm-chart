apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "integration-manager.job-scheduler.fullname" . }}
  labels:
    app: integration-manager
    chart: {{ template "integration-manager.chart" . }}
    release: {{ .Release.Name }}
data:
  application.properties: |
    #job-scheduler specific properties
    org.quartz.properties-file=/etc/config/quartz.properties
    {{- if .Values.jobScheduler.extraConfig }}
    {{ .Values.jobScheduler.extraConfig | indent 4 | trim }}
    {{- end }}
  quartz.properties: |
    org.quartz.scheduler.instanceName=ServerScheduler
    org.quartz.scheduler.instanceId=AUTO
    
    org.quartz.scheduler.skipUpdateCheck=true
    org.quartz.scheduler.jobFactory.class=org.quartz.simpl.SimpleJobFactory
    
    #============================================================================
    # Configure ThreadPool
    #============================================================================
    
    org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
    org.quartz.threadPool.makeThreadsDaemons = true
    org.quartz.threadPool.threadCount=20
    org.quartz.threadPool.threadPriority=5
    
    #============================================================================
    # Configure JobStore
    #============================================================================
    org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
    org.quartz.jobStore.useProperties=true
    org.quartz.jobStore.misfireThreshold=6000000
    org.quartz.jobStore.tablePrefix=QRTZ_
    org.quartz.jobStore.isClustered=true
    org.quartz.jobStore.clusterCheckinInterval=30000
    org.quartz.jobStore.txIsolationLevelSerializable=true
    org.quartz.jobStore.acquireTriggersWithinLock=true
    
    org.quartz.jobStore.lockHandler.class=org.quartz.impl.jdbcjobstore.StdRowLockSemaphore
    org.quartz.jobStore.lockHandler.maxRetry=7
    org.quartz.jobStore.lockHandler.retryPeriod=3000
